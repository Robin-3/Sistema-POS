Project sistema_pos {
  database_type: "SQLite"
}

/// -- ENUMS -- ///
Table enum_contact {
  _id integer [pk, increment]
  contact text [not null, unique]
}
Table enum_gender {
  _id integer [pk, increment]
  gender text [not null, unique]
}
Table enum_identification {
  _id integer [pk, increment]
  code text [not null, unique]
  identificacion text [not null]
}
Table enum_permission {
  _id integer [pk, increment]
  permission text [not null, unique]
}
Table enum_role {
  _id integer [pk, increment]
  role text [not null, unique]
}

/// -- TABLAS -- ///
// -- Usuarios
Table users {
  _id text [pk, increment, note: "uuid"]
  identification_id integer [not null, ref: > enum_identification._id]
  identification_number text [not null]
  image text
  created_at int [not null, note: "unix time", default: "now"]
  updated_at int [not null, note: "unix time", default: "now"]
  indexes {
    (identification_id, identification_number) [unique]
  }
}
Table clients {
  _id text [pk, ref: - users._id, note: "uuid"]
  names text [not null]
  surnames text
  gender_id integer [not null, ref: > enum_gender._id]
}
Table sellers {
  _id text [pk, ref: - users._id, note: "uuid"]
  names text [not null]
  surnames text
  gender_id integer [not null, ref: > enum_gender._id]
  role_id integer [not null, ref: > enum_role._id]
  password text [not null, note: "bcrypt"]
  tax_regime_code text
  economic_activity_code text
}
Table suppliers {
  _id text [pk, ref: - users._id, note: "uuid"]
  business_name text [not null]
}

/// -- TABLAS M*M -- ///
Table contacts_users {
  _id integer [pk, increment]
  contact_id integer [not null, ref: > enum_contact._id]
  user_id text [not null, ref: > users._id]
  contact string [not null]
  indexes {
    (contact_id, user_id, contact) [unique]
  }
}
Table permissions_roles {
  _id integer [pk, increment]
  permission_id integer [not null, ref: > enum_permission._id]
  role_id integer [not null, ref: > enum_role._id]
  indexes {
    (permission_id, role_id) [unique]
  }
}
Table seller_hierarchy {
  _id integer [pk, increment]
  seller_id text [not null, ref: > sellers._id]
  top_seller_id text [not null, ref: > sellers._id]
  indexes {
    (seller_id, top_seller_id) [unique]
  }
}
